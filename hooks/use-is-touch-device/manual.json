{
  "id": "use-is-touch-device",
  "manual": true,
  "language": "tsx",
  "encoding": "utf8",
  "file": "use-is-touch-device.tsx",
  "code": "\"use client\";\n\nimport { useEffect, useState } from \"react\";\n\ninterface UseIsTouchDeviceReturn {\n  isTouchable: boolean;\n}\n\nexport function useIsTouchDevice(): UseIsTouchDeviceReturn {\n  const [isTouchable, setIsTouchable] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (typeof window === \"undefined\" || typeof navigator === \"undefined\") {\n      return;\n    }\n\n    // Check for touch support using multiple methods for better compatibility\n    const hasTouch =\n      \"ontouchstart\" in window ||\n      navigator.maxTouchPoints > 0 ||\n      // Legacy support for older browsers\n      (\"msMaxTouchPoints\" in navigator &&\n        (navigator as any).msMaxTouchPoints > 0);\n\n    setIsTouchable(hasTouch);\n  }, []);\n\n  return {\n    isTouchable,\n  };\n}\n"
}
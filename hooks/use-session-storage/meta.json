{
  "name": "use-session-storage",
  "id": "use-session-storage",
  "description": "Manages session storage with declarative methods.",
  "files": [
    {
      "from": "files/use-session-storage.ts",
      "to": "src/hooks/use-session-storage.ts"
    }
  ],
  "version": "0.1.0",
  "peerDependencies": {
    "react": ">=17.0.0"
  },
  "since": "0.1.0",
  "title": "guara hooks",
  "options": {
    "properties": [
      {
        "name": "key",
        "type": "string",
        "default": "-",
        "description": "The key to store the value in session storage"
      },
      {
        "name": "initialValue",
        "type": "string",
        "default": "-",
        "description": "The initial value to store in session storage"
      },
      {
        "name": "options?",
        "type": "UseSessionStorageOptions",
        "default": "-",
        "description": "The options for the hook"
      }
    ]
  },
  "features": [
    {
      "title": "Cross-Tab Synchronization",
      "bullets": [
        "The hook listens for storage events and updates the state if the value changes in another tab or window (for the same session)."
      ]
    },
    {
      "title": "Serialization & Deserialization",
      "bullets": [
        "By default, values are serialized with JSON.stringify and deserialized with JSON.parse .",
        "You can provide custom serialize and deserialize functions for non-JSON data or advanced use cases."
      ]
    },
    {
      "title": "Error Handling",
      "bullets": [
        "If reading or writing to sessionStorage fails (e.g., quota exceeded, invalid JSON), the hook logs a warning and falls back to the initial value."
      ]
    },
    {
      "title": "SSR & Initial Value",
      "bullets": [
        "On the server, the hook always returns the initial value.",
        "The initial value is only used if there is no value in sessionStorage for the given key."
      ]
    },
    {
      "title": "Best Practices & Caveats",
      "bullets": [
        "The hook is client-side only; on the server, it does not interact with sessionStorage.",
        "Avoid storing sensitive data in sessionStorage.",
        "Changing the key will re-read and update the value from sessionStorage.",
        "For best performance, avoid creating new serialize / deserialize functions on every render (use useCallback or useMemo if needed)."
      ]
    }
  ]
}
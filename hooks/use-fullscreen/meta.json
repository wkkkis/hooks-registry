{
  "name": "use-fullscreen",
  "id": "use-fullscreen",
  "description": "Enter and exit fullscreen mode for a given element or the entire page.",
  "version": "0.1.0",
  "files": [
    {
      "from": "files/use-fullscreen.ts",
      "to": "src/hooks/use-fullscreen.ts"
    }
  ],
  "peerDependencies": {
    "react": ">=17.0.0"
  },
  "since": "0.1.0",
  "title": "guara hooks",
  "options": {
    "properties": [
      {
        "name": "ref",
        "type": "RefObject<HTMLElement> | null",
        "default": "null",
        "description": "The ref of the element to enter/exit fullscreen. If null, uses the document."
      }
    ]
  },
  "returns": {
    "properties": [
      {
        "name": "Returns a tuple",
        "description": "[isFullscreen, enter, exit] ."
      },
      {
        "name": "isFullscreen",
        "description": "is true if the element (or page) is in fullscreen."
      },
      {
        "name": "enter",
        "description": "and exit are functions to enter/exit fullscreen mode."
      }
    ]
  },
  "features": [
    {
      "title": "Cross-Browser Support",
      "bullets": [
        "The hook uses the appropriate vendor-prefixed Fullscreen API methods for compatibility with all major browsers.",
        "Listeners for fullscreen changes are also vendor-prefixed."
      ]
    },
    {
      "title": "Ref Behavior",
      "bullets": [
        "If a ref is provided, the hook will enter/exit fullscreen for that element.",
        "If null is passed, the hook will use the entire document ( document.documentElement )."
      ]
    },
    {
      "title": "State Updates & Event Handling",
      "bullets": [
        "The hook tracks whether the referenced element (or the page) is currently in fullscreen.",
        "Listens for fullscreen change events and updates state accordingly.",
        "The state is updated immediately on mount and whenever fullscreen changes."
      ]
    },
    {
      "title": "Returned Values",
      "bullets": [
        "Returns a tuple: [isFullscreen, enter, exit] .",
        "isFullscreen is true if the element (or page) is in fullscreen.",
        "enter and exit are functions to enter/exit fullscreen mode."
      ]
    },
    {
      "title": "Cleanup",
      "bullets": [
        "All event listeners are removed automatically when the component unmounts."
      ]
    },
    {
      "title": "Caveats & Best Practices",
      "bullets": [
        "Only works in the browser (client-side). On the server, the functions are no-ops.",
        "If the Fullscreen API is not available, the functions will be no-ops.",
        "The element must be in the DOM and visible to enter fullscreen.",
        "Some browsers may block fullscreen requests unless triggered by a user gesture."
      ]
    }
  ]
}